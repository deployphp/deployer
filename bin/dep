#!/usr/bin/env php
<?php
/* (c) Anton Medvedev <anton@elfet.ru>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

$loaded = false;

foreach (array(__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        require $file;
        $loaded = true;
        break;
    }
}

if (!$loaded) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

// Recipe include path
set_include_path(__DIR__ . '/../' . PATH_SEPARATOR . get_include_path());

// Init App
$app = new \Symfony\Component\Console\Application('Deployer', '2.0.0');
$input = new \Symfony\Component\Console\Input\ArgvInput();
$output = new \Symfony\Component\Console\Output\ConsoleOutput();

// Init Deployer
$deployer = new \Deployer\Deployer(
    $app,
    $input,
    $output
);

// Set file option for custom deploy script
$app->getDefinition()->addOption(
    new \Symfony\Component\Console\Input\InputOption(
        'file',
        'f',
        \Symfony\Component\Console\Input\InputOption::VALUE_OPTIONAL,
        'The deployer script to use',
        'deploy.php'
    )
);

// Get the deploy script
$input->bind($app->getDefinition());
$optionFile = $input->getOption('file');
$deployFile = realpath($optionFile);

if (($deployFile !== false) && is_file($deployFile) && is_readable($deployFile)) {
    require $deployFile;
} else if ($app->getDefinition()->getOption('file')->getDefault() !== $optionFile) {
    // If the user specified a script and it doesn't exist then let them know
    $output->writeln('<error>The deployer script ' . $optionFile . ' does not exist or is not readable</error>');
}

// Self-update command
$selfUpdate = new \KevinGH\Amend\Command('self-update');
$selfUpdate->setDescription('Updates deployer.phar to the latest version');
$selfUpdate->setManifestUri('https://raw.github.com/elfet/deployer/master/manifest.json');
$deployer->getConsole()->add($selfUpdate);
$deployer->getHelperSet()->set(new \KevinGH\Amend\Helper());

// Run Deployer
$deployer->run();
