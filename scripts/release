#!/usr/bin/env php
<?php
/* (c) Anton Medvedev <anton@medv.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

require __DIR__ . '/../vendor/autoload.php';

chdir(realpath(__DIR__ . '/..'));

$opt = getopt('v::');

$changelog = file_get_contents('CHANGELOG.md');

$latestVersion = '0.0.0';
if (preg_match('/## v(.+)/', $changelog, $matches)) {
    $latestVersion = $matches[1];
} 

if (array_key_exists('v', $opt)) {
    $version = $opt['v'];
    if (!preg_match('/^\d+\.\d+\.\d+(-[\d\w\.]+)?$/i', $version)) {
        die("Version number must follow semantic versioning.\n");
    }
} else {
    die("Please, specify version to release. Latest version is -v$latestVersion\n");
}

// Next goes bunch of regexs. Now we have three problems.
// Right solution will be to create a parser what reads 
// changelog and generates AST, printer which outputs all
// in desired format. But it will take too much effort.
// So may be you, {{user_name}}, wish to implement it?
// 
// ...back to regexs üë®üèª‚ÄçüöÄ

$changelog = preg_replace('/(?<=## )master/', "v$version", $changelog);
$changelog = preg_replace('/\[(v.+)master\]\((.+)master\)/', "[$1v$version]($2v$version)", $changelog);

$new = <<<MASTER
# Changelog

## master
[v$version...master](https://github.com/deployphp/deployer/compare/v$version...master)

MASTER;
$changelog = preg_replace('/# Changelog/', $new, $changelog);

file_put_contents('CHANGELOG.md', $changelog);

echo "Updated CHANGELOG.md to v$version.\n";
